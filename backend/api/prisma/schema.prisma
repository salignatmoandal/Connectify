// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

enum UserRole {
  USER
  ADMIN
  AUCTION_HOUSE
}

enum ItemStatus {
  DRAFT
  PUBLISHIED
  SOLD
  ARCHIVED
}

enum OrderStatus {
  PENDING
  PAID
  CANCELLED
  DELIVRED
}

model AuctionHouse {
  id          String       @id @default(uuid())
  name        String
  address     String
  contact     String
  collections Collection[]
  createdAt   DateTime     @default(now())
}

model Collection {
  id             String       @id @default(uuid())
  name           String
  description    String
  category       String
  status         ItemStatus   @default(DRAFT)
  auctionHouse   AuctionHouse @relation(fields: [auctionHouseId], references: [id])
  auctionHouseId String
  items          Item[]
  createdAt      DateTime     @default(now())
}

model Item {
  id           String     @id @default(uuid())
  title        String
  description  String
  collection   Collection @relation(fields: [collectionId], references: [id])
  collectionId String
  initialPrice Decimal
  currentPrice Decimal
  status       ItemStatus @default(DRAFT)
  imageUrls    String[]
  orders       Order[]
  createdAt    DateTime   @default(now())
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      UserRole @default(USER)
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id     String      @id @default(uuid())
  user   User        @relation(fields: [userId], references: [id])
  userId String
  item   Item        @relation(fields: [itemId], references: [id])
  itemId String
  price  Decimal
  status OrderStatus @default(PENDING)
  paymentId String? 
  createdAt DateTime @default(now())
}
